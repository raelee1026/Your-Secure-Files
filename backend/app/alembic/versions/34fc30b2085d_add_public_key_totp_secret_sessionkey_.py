"""Add public_key, totp_secret, SessionKey and EncryptedFile models

Revision ID: 34fc30b2085d
Revises: 1a31ce608336
Create Date: 2025-05-20 07:42:38.431222

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision = '34fc30b2085d'
down_revision = '1a31ce608336'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('encryptedfile',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('owner_id', sa.Uuid(), nullable=False),
    sa.Column('file_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('file_content_encrypted', sa.LargeBinary(), nullable=False),
    sa.Column('iv', sa.LargeBinary(), nullable=False),
    sa.Column('tag', sa.LargeBinary(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sessionkey',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('session_key_encrypted', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('user', sa.Column('public_key', sa.String(), nullable=True))
    op.add_column('user', sa.Column('totp_secret', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.create_unique_constraint(None, 'user', ['public_key'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'user', type_='unique')
    op.drop_column('user', 'totp_secret')
    op.drop_column('user', 'public_key')
    op.drop_table('sessionkey')
    op.drop_table('encryptedfile')
    # ### end Alembic commands ###
